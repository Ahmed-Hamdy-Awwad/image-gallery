#include <iostream>
using namespace std;

// Colors struct
struct Colors
{
    int white=0,black=9,orange=2,pink=1;
};
Colors color;

// No. of Pixels
const int N = 32;

// Create image Canvas
int** get_canvas()
{
    int** canvas = new int*[N];
    for (int i = 0; i < N; ++i) {
        canvas[i] = new int[N];
        for (int j = 0; j < N; ++j) {
            canvas[i][j]=0;
        }
    }
    return canvas;
}

class Image
{   
    int** canvas;
    string type;

    public:
    Image( string image_type){
        canvas = get_canvas();
        type=image_type;
    }

    void ice_cream()
    {   
        int outline[][2] = {
            {1,14},{1,15},{1,16},{1,17},
            {2,11},{2,12},{2,13},{2,18},{2,19},{2,20},
            {3,10},{3,21},
            {4,9},{4,22},
            {5,8},{5,23},
            {6,8},{6,23},
            {7,8},{7,23},
            {8,7},{8,24},
            {9,7},{9,24},
            {10,7},{10,8},{10,9},{10,14},{10,15},{10,16},{10,17},{10,22},{10,23},{10,24},
            {11,6},{11,10},{11,13},{11,18},{11,21},{11,25},
            {12,5},{12,11},{12,12},{12,19},{12,20},{12,26},
            {13,5},{13,26},
            {14,5},{14,26},
            {15,6},{15,11},{15,12},{15,19},{15,20},{15,25},
            {16,7},{16,8},{16,9},{16,10},{16,13},{16,14},{16,15},{16,16},{16,17},{16,18},{16,21},{16,22},{16,23},{16,24},
            {17,8},{17,23},
            {18,8},{18,23},
            {19,9},{19,22},
            {20,9},{20,22},
            {21,10},{21,21},
            {22,10},{22,21},
            {23,11},{23,20},
            {24,11},{24,20},
            {25,12},{25,19},
            {26,12},{26,19},
            {27,13},{27,18},
            {28,13},{28,18},
            {29,14},{29,17},
            {30,14},{30,15},{30,16},{30,17},
        };

        int pink[][2] = {
            {2,14},{2,15},{2,16},{2,17},
            {3,11},{3,12},{3,13},{3,14},{3,15},{3,16},{3,17},{3,18},{3,19},{3,20},
            {4,10},{4,11},{4,12},{4,13},{4,14},{4,15},{4,16},{4,17},{4,18},{4,19},{4,20},{4,21},
            {5,9},{5,10},{5,11},{5,12},{5,13},{5,14},{5,15},{5,16},{5,17},{5,18},{5,19},{5,20},{5,21},{5,22},
            {6,9},{6,10},{6,11},{6,12},{6,13},{6,14},{6,15},{6,16},{6,17},{6,18},{6,19},{6,20},{6,21},{6,22},
            {7,9},{7,10},{7,11},{7,12},{7,13},{7,14},{7,15},{7,16},{7,17},{7,18},{7,19},{7,20},{7,21},{7,22},
            {8,8},{8,9},{8,10},{8,11},{8,12},{8,13},{8,14},{8,15},{8,16},{8,17},{8,18},{8,19},{8,20},{8,21},{8,22},{8,23},
            {9,8},{9,9},{9,10},{9,11},{9,12},{9,13},{9,14},{9,15},{9,16},{9,17},{9,18},{9,19},{9,20},{9,21},{9,22},{9,23},
            {10,10},{10,11},{10,12},{10,13},{10,18},{10,19},{10,20},{10,21},
            {11,7},{11,8},{11,9},{11,11},{11,12},{11,14},{11,15},{11,16},{11,17},{11,19},{11,20},{11,22},{11,23},{11,24},
            {12,6},{12,7},{12,8},{12,9},{12,10},{12,13},{12,14},{12,15},{12,16},{12,17},{12,18},{12,21},{12,22},{12,23},{12,24},{12,25},
            {13,6},{13,7},{13,8},{13,9},{13,10},{13,11},{13,12},{13,13},{13,14},{13,15},{13,16},{13,17},{13,18},{13,19},{13,20},{13,21},{13,22},{13,23},{13,24},{13,25},
            {14,6},{14,7},{14,8},{14,9},{14,10},{14,11},{14,12},{14,13},{14,14},{14,15},{14,16},{14,17},{14,18},{14,19},{14,20},{14,21},{14,22},{14,23},{14,24},{14,25},
            {15,7},{15,8},{15,9},{15,10},{15,13},{15,14},{15,15},{15,16},{15,17},{15,18},{15,21},{15,22},{15,23},{15,24},
        };

        int orange[][2] = {
            {16,11},{16,12},{16,19},{16,20},
            {17,9},{17,10},{17,11},{17,12},{17,13},{17,14},{17,15},{17,16},{17,17},{17,18},{17,19},{17,20},{17,21},{17,22},
            {18,9},{18,10},{18,11},{18,12},{18,13},{18,14},{18,15},{18,16},{18,17},{18,18},{18,19},{18,20},{18,21},{18,22},
            {19,10},{19,11},{19,12},{19,13},{19,14},{19,15},{19,16},{19,17},{19,18},{19,19},{19,20},{19,21},
            {20,10},{20,11},{20,12},{20,13},{20,14},{20,15},{20,16},{20,17},{20,18},{20,19},{20,20},{20,21},
            {21,11},{21,12},{21,13},{21,14},{21,15},{21,16},{21,17},{21,18},{21,19},{21,20},
            {22,11},{22,12},{22,13},{22,14},{22,15},{22,16},{22,17},{22,18},{22,19},{22,20},
            {23,12},{23,13},{23,14},{23,15},{23,16},{23,17},{23,18},{23,19},
            {24,12},{24,13},{24,14},{24,15},{24,16},{24,17},{24,18},{24,19},
            {25,13},{25,14},{25,15},{25,16},{25,17},{25,18},
            {26,13},{26,14},{26,15},{26,16},{26,17},{26,18},
            {27,14},{27,15},{27,16},{27,17},
            {28,14},{28,15},{28,16},{28,17},
            {29,15},{29,16},
        };

        int x[2];
        for (auto x : outline)
        {   
            canvas[x[0]][x[1]] = color.black;
        } 

        for (auto x : pink)
        {   
            canvas[x[0]][x[1]] = color.pink;
        }  

        for (auto x : orange)
        {   
            canvas[x[0]][x[1]] = color.orange;
        }    
    }

    void get_image()
    {
        // ICE CREAM
        if (type == "ice_cream")
            ice_cream();
    }

    void display()
    {
        get_image();
        for (int i = 0; i < N; ++i) {
            for (int j = 0; j < N; ++j) {
                if (canvas[i][j] != 0)cout << canvas[i][j];
                else cout<<" ";
            }
            cout << endl;
        }
    }
    
};